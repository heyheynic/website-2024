---
import { getCollection, type CollectionEntry, getEntry } from "astro:content";
import MarkdownPostLayout from "../../layouts/MarkdownPostLayout.astro";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import BlogCard from "../../components/BlogCard.astro";
import { getEntries } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<"posts">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const { data: authorData } = await getEntry("team", entry.data.author);
const { img } = authorData;

const relatedPosts = entry.data.relatedPosts
  ? await getEntries(entry.data.relatedPosts)
  : [];



const images = import.meta.glob<{ default: ImageMetadata }>('/src/content/team/images/*.{jpeg,jpg,png,gif,webp}');

if (!images[`/src/content/team/images/${img}`]) {
  throw new Error(`Image "${img}" not found in the assets folder.`);
}

---
<MarkdownPostLayout frontmatter={entry.data}>

  <Content />
  <div class="meta">
    <Image src={
     images[`/src/content/team/images/${authorData.img}`]()} alt={authorData.name} width="25" />
    <p>{authorData.name}</p>
    <!-- <time datetime={entry.data.pubDate.toISOString()}
      >{
        entry.data.pubDate.toLocaleDateString(undefined, {
          dateStyle: "medium",
          timeZone: "CET",
        })
      }</time
    > -->
  </div>

  {
    relatedPosts.length > 0 && (

        <h2>Related Posts</h2>
        <div>
          {relatedPosts.map((p) => (
            <BlogCard post={p} />
          ))}
        </div>
    )
  }
</MarkdownPostLayout>

<style></style>
